@namespace NATSInternal.Blazor.Components
@inject IUserService UserService

<MainBlock Title="@BlockTitle" BodyPadding="@((0, 0, 0, 0))">
    <!-- HeaderContent -->
    <BlockHeaderContent>
        <button class="btn btn-primary btn-sm" @click="reloadAsync"
                :disabled="loadingState.isLoading">
            <i class="bi bi-arrow-counterclockwise"></i>
        </button>
    </BlockHeaderContent>

    <!-- ChildContent -->
    <BlockBodyContent>
        <ul class="list-group list-group-flush top-effective-users-list">
            @if (Model.Count == 0)
            {
                <li class="d-flex align-items-center justify-content-center p-3 opacity-50">
                    @ResultNotFoundText
                </li>
            }
            else
            {
                foreach (UserBasicModel user in Model)
                {
                    <li class="list-group-item d-flex flex-row align-items-center
                                    bg-transparent px-3 py-2">
                        <NavLink href="/User/">
                            <img src="@user.AvatarUrl" class="rounded-circle me-2">
                        </NavLink>
                        <div class="d-flex flex-column flex-fill align-items-start name">
                            <NavLink href="/User/">
                                <span class="fw-bold">@user.FullName</span>
                            </NavLink>
                            <span class="badge bg-success-subtle border
                                            border-success-subtle text-success my-1
                                            rounded small handled-orders fw-bold">
                                @GetDetailText(user)
                            </span>
                        </div>
                    </li>
                }
            }
        </ul>
    </BlockBodyContent>
</MainBlock>

@code {
    [Parameter]
    public UserSecondaryListMode Mode { get; set; }

    [Parameter]
    public List<UserBasicModel> Model { get; set; }

    private string BlockTitle => Mode == UserSecondaryListMode.JoinedRecently
        ? "Mới gia nhập"
        : "Sinh nhật tháng này";

    private string ResultNotFoundText
    {
        get
        {
            if (Mode == UserSecondaryListMode.JoinedRecently) {
                return "Không có nhân viên nào vừa gia nhập";
            }

            return "Không có nhân viên nào có sinh nhật sắp tới";
        }
    }

    private string GetDetailText(UserBasicModel user) {
        string result = Mode == UserSecondaryListMode.JoinedRecently
            ? user.JoiningDate?.ToVietnameseString()
            : user.Birthday?.ToVietnameseString();
        return result!.Split(", ")[0];
    }
}