@inject INotificationService NotificationService;
@rendermode InteractiveServer

<div class="dropdown" id="notification">
    <button class="btn btn-lg text-primary border-0 p-0 fs-4"
            type="button"
            data-bs-toggle="dropdown" aria-expanded="false">
        @if (_model?.Items?.Count > 0)
        { 
            <i class="bi bi-bell-fill">
                <small class="badge rounded-circle notification-dot bg-danger"></small>
            </i>
        }
        else
        { 
            <i class="bi bi-bell"></i>
        }
    </button>
    <div class="dropdown-menu dropdown-menu-end border border-primary-subtle overflow-hidden
                p-0 shadow">
        <ul class="list-group list-group-flush">
            <li class="list-group-item p-2 ps-3 d-flex justify-content-between">
                <span class="text-primary fw-bold">Thông báo</span>
                @if (_model?.Items?.Count(n => !n.IsRead) > 0)
                {
                    <span class="badge bg-success-subtle text-success d-flex
                                align-items-center">
                        Chưa đọc: @(_model?.Items?.Count(n => !n.IsRead))
                    </span>
                }
                else
                {
                    <div class="badge bg-secondary-subtle text-secondary
                                d-flex align-items-center">
                        Đã đọc
                    </div>
                }
            </li>
            @foreach (NotificationModel notification in _model.Items)
            {
                <li class="@GetNotificationClass(notification)">
                    <div class="@GetNotificationIconContainerClass(notification)">
                        <i class="bi bi-cart-plus"></i>
                    </div>
                    <div class="d-flex flex-column flex-fill detail ms-3">
                        <span class="fw-bold">@notification.Content</span>
                        <span class="opacity-50">@notification.EmittedDeltaText</span>
                    </div>
                </li>
            }
            <li class="list-group-item p-2 align-middle text-center">
                <a>Xem tất cả thông báo</a>
            </li>
        </ul>
    </div>
</div>

@code {
    private NotificationListModel _model;

    protected override async Task OnInitializedAsync()
    {
        NotificationListResponseDto responseDto;
        responseDto = await NotificationService.GetListAsync();
        _model = new NotificationListModel(responseDto);
        Console.WriteLine(_model.Items == null ? "True" : "False");
    }

    private string GetNotificationClass(NotificationModel notification)
    {
        string classNames = "list-group-item d-flex flex-row align-items-center px-3 py-2" +
            "notification-item";
        if (!notification.IsRead)
        {
            classNames += " bg-success bg-opacity-10 text-success-emphasis";
        }

        return classNames;
    }

    private string GetNotificationIconContainerClass(NotificationModel notification)
    {
        List<string> classNames = new List<string>
        {
            "notification-icon-container d-flex h-100",
            "justify-content-center align-items-center"
        };

        if (!notification.IsRead)
        {
            classNames.Add("bg-success text-white");
        }
        else
        {
            classNames.Add("bg-secondary-subtle text-secondary");
        }

        return string.Join(" ", classNames);
    }
}