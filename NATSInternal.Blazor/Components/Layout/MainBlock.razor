@namespace NATSInternal.Blazor.Components

<div class="block bg-white rounded-3 p-0 d-flex flex-column">
    <!-- Header -->
    <div class="block-header bg-opacity-25 border ps-3 p-2 rounded-top-3 d-flex
                align-items-center @HeaderComputedClass">
        <div class="small fw-bold flex-fill me-2 pt-1 text-@Color.ToString()">
            @Title.ToUpper()
        </div>
        @Header
        <i class="bi bi-x-lg text-primary"></i>
    </div>
        
    <!-- Body -->
    <div class="rounded-bottom-3 flex-fill @BodyComputedClass">
        <slot name="body"></slot>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public MainBlockColor Color { get; set; }

    [Parameter]
    public string HeaderClass { get; set; }

    [Parameter]
    public bool Paginator { get; set; }

    [Parameter]
    public bool BodyClass { get; set; }

    [Parameter]
    public (int Top, int Right, int Bottom, int Left)? BodyPadding { get; set; }

    [Parameter]
    public bool BodyBorder { get; set; }

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    private string HeaderComputedClass
    {
        get
        {
            string color = Color.ToString();
            string className = $"bg-{color}-subtle border-{color}-subtle";
            if (HeaderClass != null)
            {
                className += $" {HeaderClass}";
            }

            return className;
        }
    }

    private string BodyComputedClass
    {
        get
        {
            if (BodyPadding.HasValue)
            {
                string[] classNames = new[]
                {
                    $"pt-{BodyPadding.Value.Top}",
                    $"pe-{BodyPadding.Value.Right}",
                    $"pb-{BodyPadding.Value.Bottom}",
                    $"ps-{BodyPadding.Value.Left}"
                };

                return string.Join(" ", classNames);
            }

            return null;
        }
    }
}
